{"name":"Ng-alerts","tagline":"An angular extension to house notifications","body":"# ng-alerts\r\n\r\n[![dependency Status](https://david-dm.org/mrsteele/ng-alerts.svg)](https://david-dm.org/angular-ui/bootstrap#info=dependencies)\r\n[![devDependency Status](https://david-dm.org/mrsteele/ng-alerts/dev-status.svg)](https://david-dm.org/angular-ui/bootstrap#info=devDependencies)\r\n\r\nAn angular extension to manager front-end notifications and alerts.\r\n\r\n## About\r\n\r\nLIVE DEMO: http://mrsteele.github.io/ng-alerts/\r\n\r\nI made this plugin in an attempt to manage any and all user-faces notifications and alerts. I wanted it clean, extensible, and scalable.\r\n\r\n## Prerequisites\r\n\r\nOnly a few prerequisites to use this plugin (a prereq's prereqs listed as well).\r\n\r\n* AngularJS\r\n* Angular-UI Bootstrap\r\n    * Bootstrap\r\n\r\n## Installation\r\n\r\n### Node\r\n\r\n```\r\nnpn install ng-alerts --save\r\n```\r\n\r\n### Bower\r\n\r\n```\r\nbower install ng-alerts --save\r\n```\r\n\r\nng-alerts is made to be flexible for the benefit of the developer. Mix and match whatever systems you want to achieve whatever you would like!.\r\n\r\nIf you want to see a quick example, just open */test/index.html* and that will let you know what to expect, otherwise read the information below.\r\n\r\nFirst, you must include the module name in your dependencies list.\r\n\r\n```javascript\r\nvar testApp = angular.module('testApp', [\r\n    'ngAlerts'\r\n]);\r\n```\r\n\r\nng-alerts will now be installed for you to use throughout your application. You can configure a few defaults of the application with the provider.\r\n\r\n```javascript\r\ntestApp.config(['ngAlertsProvider', function (ngAlertsProvider) {\r\n    // Global empty list text.\r\n    ngAlertsProvider.options.emptyListText = 'Nothing here...';\r\n    \r\n    // The queue timeout for new alerts.\r\n    ngAlertsProvider.options.queueTimeout = 3000;\r\n    \r\n    // The queue location (top||bottom, left||right).\r\n    ngAlertsProvider.options.queueLocation = 'bottom left';\r\n}]);\r\n```\r\n\r\nIt is recommended you interface through **ngAlertsMngr** to add your alerts. Use the *add* function to add an alert. The first argument is the message, and the seciond one (optional) is the type (defaults to \"warning\" but any of the bootstrap types are valid).\r\n```javascript\r\ntestApp.controller('TestCtrl', function ($scope, ngAlertsMngr) {\r\n    $scope.createAlert = function () {\r\n        ngAlertsMngr.add('testing', 'warning');\r\n    };\r\n});\r\n```\r\n\r\nUsing the **add** function will add a notification and update all directives throughout your application.\r\n\r\n## Directives\r\n\r\n### ng-alerts-count\r\n\r\nUse this to display the current count of notifications.\r\n\r\n* **badge** - Set this attribute to \"true\" if you want it to take on the appearance of a bade.\r\n* **hide-empty** - Set this to \"true\" if you want to completely remove the text if you have \"zero\" alerts.\r\n\r\n#### Example\r\n```html\r\n<ng-alerts-count badge=\"true\" hide-empty=\"true\"></ng-alerts-count>\r\n```\r\n\r\n### ng-alerts-list\r\n\r\nDisplays a list of alerts, with the ability to remove them.\r\n* **empty-text** - Overrides the default empty list text.\r\n\r\n#### Example\r\n```html\r\n<ng-alerts-list empty-text=\"No alerts available\"></ng-alerts-list>\r\n```\r\n\r\n### ng-alerts-popover\r\n\r\nAttaches to an element (button, a, etc...) and creates a click handler for displaying ```ng-alerts-list``` in a popover. This one uses the backbone popover directive, so all popover attributes are applicable. See https://angular-ui.github.io/bootstrap/#/popover.\r\n\r\n#### Example\r\n```html\r\n<button ng-alerts-popover popover-placement=\"left\"></button>\r\n```\r\n\r\n## Can I contribute?\r\n\r\nYES! Pull requests welcome!\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}